/**HackWars 2008PerlinNoise Algorithm.Ported From:WWW.SorgoNet.COM */package com.plink.Hack3D;import javax.media.opengl.*;import com.sun.opengl.util.texture.*;import com.sun.opengl.util.*;import java.io.*;import javax.imageio.*;import java.awt.image.*;import Hacktendo.*;import javax.media.opengl.glu.*;import javax.media.opengl.GL;import javax.media.opengl.GLAutoDrawable;import javax.media.opengl.GLCanvas;import javax.media.opengl.GLEventListener;public class PerlinNoise{	private static float RGB[]=new float[3];	private static float InterPolation(float a, float b, float c)	{   		return a+(b-a)*c*c*(3-2*c);                                                   	}	private static float InterLinear(float a, float b, float c)	{    		  return a*(1-c)+b*c;                                         	}	private static float Noise( int x)	{		x = (x<<13)^x;		return ((float)(((x * (x * x * 15731 + 789221) + 1376312589) & 0x7fffffff) / 2147483648.0));	}	private static float PerlinNoise(float x,float y,int width,int octaves,int seed,double periode){			  	   double a,b,value=0.0f,freq,tam_pas,zone_x,zone_y;	   int s,box,num,step_x,step_y;	   int amplitude=120;	   int noisedata;	   freq=1/(float)(periode);	   for ( s=0;s<octaves;s++){			num=(int)(width*freq);			step_x=(int)(x*freq);			step_y=(int)(y*freq);			zone_x=x*freq-step_x;			zone_y=y*freq-step_y;			box=step_x+step_y*num;			noisedata=(box+seed);			a=InterPolation(Noise(noisedata),Noise(noisedata+1),(float)zone_x);			b=InterPolation(Noise(noisedata+num),Noise(noisedata+1+num),(float)zone_x);			value=InterPolation((float)a,(float)b,(float)zone_y)*amplitude;		}				return((float)value);	}	private static void colour (float valor){		  int r=(int)InterLinear(valor,0,0 );		  int g=(int)InterLinear(0,0,valor);		  int b=(int)InterLinear(0,0,valor);		  RGB[0]=r;		  RGB[1]=g;		  RGB[2]=b;	}	/**	Add perlin noise to a height-map image.	*/	public static void perlinNoiseBW(int widthImage,int heightImage,float scale,int seed,int width,int data[]){		int x,y;		float  disp1,disp2,disp3,disp4,disp5,disp6;		for(y=0;y<heightImage;y++){			for(x=0;x<widthImage;x++){				disp1=PerlinNoise(x*scale,y*scale,width,1,seed,100);				disp2=PerlinNoise(x*scale,y*scale,width,1,seed,25);				disp3=PerlinNoise(x*scale,y*scale,width,1,seed,12.5);				disp4=PerlinNoise(x*scale,y*scale,width,1,seed,6.25);				disp5=PerlinNoise(x*scale,y*scale,width,1,seed,3.125);				disp6=PerlinNoise(x*scale,y*scale,width,1,seed,1.56);				 				colour((int)disp1+(int)(disp2*.25)+(int)(disp3*.125)+(int)(disp4*.0625)+(int)(disp5*.03125)+(int)(disp6*.0156));				int theight=(int)((data[x+y*widthImage]&0x00FF0000)>>16)-50+(int)RGB[0];				if(theight<0)					theight=0;				if(theight>255)					theight=255;									data[x+y*widthImage]=theight<<16;			}		}	}}